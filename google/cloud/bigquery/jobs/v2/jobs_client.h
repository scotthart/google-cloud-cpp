// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/bigquery/jobs/v2/jobs.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGQUERY_JOBS_V2_JOBS_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGQUERY_JOBS_V2_JOBS_CLIENT_H

#include "google/cloud/bigquery/jobs/v2/jobs_rest_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <memory>
#include <string>

namespace google {
namespace cloud {
namespace bigquery_jobs_v2 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the jobs resource.
/// https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class JobsClient {
 public:
  explicit JobsClient(std::shared_ptr<JobsConnection> connection,
                      Options opts = {});
  ~JobsClient();

  ///@{
  /// @name Copy and move support
  JobsClient(JobsClient const&) = default;
  JobsClient& operator=(JobsClient const&) = default;
  JobsClient(JobsClient&&) = default;
  JobsClient& operator=(JobsClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(JobsClient const& a, JobsClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(JobsClient const& a, JobsClient const& b) {
    return !(a == b);
  }
  ///@}

  // clang-format off
  ///
  /// Requests that a job be cancelled. This call will return immediately, and
  /// the client will need to poll for the job status to see if the cancel
  /// completed successfully. Cancelled jobs may still incur costs.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/cancel
  ///
  /// @param project_id  Required. Project ID of the job to cancel
  /// @param job_id  Required. Job ID of the job to cancel
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.JobCancelResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.jobs.v2.CancelRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/jobs/v2/jobs.proto#L128}
  /// [google.cloud.cpp.bigquery.v2.JobCancelResponse]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_005.proto#L510}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::JobCancelResponse> Cancel(
      std::string const& project_id, std::string const& job_id,
      Options opts = {});

  // clang-format off
  ///
  /// Requests that a job be cancelled. This call will return immediately, and
  /// the client will need to poll for the job status to see if the cancel
  /// completed successfully. Cancelled jobs may still incur costs.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/cancel
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.jobs.v2.CancelRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.JobCancelResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.jobs.v2.CancelRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/jobs/v2/jobs.proto#L128}
  /// [google.cloud.cpp.bigquery.v2.JobCancelResponse]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_005.proto#L510}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::JobCancelResponse> Cancel(
      google::cloud::cpp::bigquery::jobs::v2::CancelRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Requests the deletion of the metadata of a job. This call returns when the
  /// job's metadata is deleted.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/delete
  ///
  /// @param project_id  Required. Project ID of the job for which metadata is to be deleted.
  /// @param job_id  Required. Job ID of the job for which metadata is to be deleted. If this is
  ///  a parent job which has child jobs, the metadata from all child jobs will be
  ///  deleted as well. Direct deletion of the metadata of child jobs is not
  ///  allowed.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.jobs.v2.DeleteJobRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/jobs/v2/jobs.proto#L146}
  ///
  // clang-format on
  Status DeleteJob(std::string const& project_id, std::string const& job_id,
                   Options opts = {});

  // clang-format off
  ///
  /// Requests the deletion of the metadata of a job. This call returns when the
  /// job's metadata is deleted.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/delete
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.jobs.v2.DeleteJobRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.jobs.v2.DeleteJobRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/jobs/v2/jobs.proto#L146}
  ///
  // clang-format on
  Status DeleteJob(
      google::cloud::cpp::bigquery::jobs::v2::DeleteJobRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns information about a specific job. Job information is available for
  /// a six month period after creation. Requires that you're the person who ran
  /// the job, or have the Is Owner project role.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/get
  ///
  /// @param project_id  Required. Project ID of the requested job.
  /// @param job_id  Required. Job ID of the requested job.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Job])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.jobs.v2.GetJobRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/jobs/v2/jobs.proto#L164}
  /// [google.cloud.cpp.bigquery.v2.Job]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_005.proto#L467}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Job> GetJob(
      std::string const& project_id, std::string const& job_id,
      Options opts = {});

  // clang-format off
  ///
  /// Returns information about a specific job. Job information is available for
  /// a six month period after creation. Requires that you're the person who ran
  /// the job, or have the Is Owner project role.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/get
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.jobs.v2.GetJobRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Job])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.jobs.v2.GetJobRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/jobs/v2/jobs.proto#L164}
  /// [google.cloud.cpp.bigquery.v2.Job]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_005.proto#L467}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Job> GetJob(
      google::cloud::cpp::bigquery::jobs::v2::GetJobRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// RPC to get the results of a query job.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/getQueryResults
  ///
  /// @param project_id  Required. Project ID of the query job.
  /// @param job_id  Required. Job ID of the query job.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.GetQueryResultsResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.jobs.v2.GetQueryResultsRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/jobs/v2/jobs.proto#L182}
  /// [google.cloud.cpp.bigquery.v2.GetQueryResultsResponse]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_005.proto#L322}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::GetQueryResultsResponse>
  GetQueryResults(std::string const& project_id, std::string const& job_id,
                  Options opts = {});

  // clang-format off
  ///
  /// RPC to get the results of a query job.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/getQueryResults
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.jobs.v2.GetQueryResultsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.GetQueryResultsResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.jobs.v2.GetQueryResultsRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/jobs/v2/jobs.proto#L182}
  /// [google.cloud.cpp.bigquery.v2.GetQueryResultsResponse]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_005.proto#L322}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::GetQueryResultsResponse>
  GetQueryResults(
      google::cloud::cpp::bigquery::jobs::v2::GetQueryResultsRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Starts a new asynchronous job. This API has two different kinds of endpoint
  /// URIs, as this method supports a variety of use cases. * The *Metadata* URI
  /// is used for most interactions, as it accepts the job configuration
  /// directly. * The *Upload* URI is ONLY for the case when you're sending both
  /// a load job configuration and a data stream together. In this case, the
  /// Upload URI accepts the job configuration and the data as two distinct
  /// multipart MIME parts.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/insert
  ///
  /// @param project_id  Project ID of project that will be billed for the job.
  /// @param job_resource  The Job for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Job])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.jobs.v2.InsertJobRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/jobs/v2/jobs.proto#L227}
  /// [google.cloud.cpp.bigquery.v2.Job]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_005.proto#L467}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Job> InsertJob(
      std::string const& project_id,
      google::cloud::cpp::bigquery::v2::Job const& job_resource,
      Options opts = {});

  // clang-format off
  ///
  /// Starts a new asynchronous job. This API has two different kinds of endpoint
  /// URIs, as this method supports a variety of use cases. * The *Metadata* URI
  /// is used for most interactions, as it accepts the job configuration
  /// directly. * The *Upload* URI is ONLY for the case when you're sending both
  /// a load job configuration and a data stream together. In this case, the
  /// Upload URI accepts the job configuration and the data as two distinct
  /// multipart MIME parts.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/insert
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.jobs.v2.InsertJobRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Job])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.jobs.v2.InsertJobRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/jobs/v2/jobs.proto#L227}
  /// [google.cloud.cpp.bigquery.v2.Job]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_005.proto#L467}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Job> InsertJob(
      google::cloud::cpp::bigquery::jobs::v2::InsertJobRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Lists all jobs that you started in the specified project. Job information
  /// is available for a six month period after creation. The job list is sorted
  /// in reverse chronological order, by job creation time. Requires the Can View
  /// project role, or the Is Owner project role if you set the allUsers
  /// property.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/list
  ///
  /// @param project_id  Project ID of the jobs to list.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.JobList])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.jobs.v2.ListJobsRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/jobs/v2/jobs.proto#L238}
  /// [google.cloud.cpp.bigquery.v2.JobList]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_005.proto#L1122}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::JobList> ListJobs(
      std::string const& project_id, Options opts = {});

  // clang-format off
  ///
  /// Lists all jobs that you started in the specified project. Job information
  /// is available for a six month period after creation. The job list is sorted
  /// in reverse chronological order, by job creation time. Requires the Can View
  /// project role, or the Is Owner project role if you set the allUsers
  /// property.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/list
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.jobs.v2.ListJobsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.JobList])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.jobs.v2.ListJobsRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/jobs/v2/jobs.proto#L238}
  /// [google.cloud.cpp.bigquery.v2.JobList]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_005.proto#L1122}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::JobList> ListJobs(
      google::cloud::cpp::bigquery::jobs::v2::ListJobsRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Runs a BigQuery SQL query synchronously and returns query results if the
  /// query completes within a specified timeout.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/query
  ///
  /// @param project_id  Required. Project ID of the query request.
  /// @param query_request_resource  The QueryRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.QueryResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.jobs.v2.QueryRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/jobs/v2/jobs.proto#L279}
  /// [google.cloud.cpp.bigquery.v2.QueryResponse]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_005.proto#L2015}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::QueryResponse> Query(
      std::string const& project_id,
      google::cloud::cpp::bigquery::v2::QueryRequest const&
          query_request_resource,
      Options opts = {});

  // clang-format off
  ///
  /// Runs a BigQuery SQL query synchronously and returns query results if the
  /// query completes within a specified timeout.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/query
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.jobs.v2.QueryRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.QueryResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.jobs.v2.QueryRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/jobs/v2/jobs.proto#L279}
  /// [google.cloud.cpp.bigquery.v2.QueryResponse]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_005.proto#L2015}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::QueryResponse> Query(
      google::cloud::cpp::bigquery::jobs::v2::QueryRequest const& request,
      Options opts = {});

 private:
  std::shared_ptr<JobsConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace bigquery_jobs_v2
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGQUERY_JOBS_V2_JOBS_CLIENT_H
