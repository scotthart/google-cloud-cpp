// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/bigquery/jobs/v2/jobs.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGQUERY_JOBS_V2_INTERNAL_JOBS_REST_CONNECTION_IMPL_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGQUERY_JOBS_V2_INTERNAL_JOBS_REST_CONNECTION_IMPL_H

#include "google/cloud/bigquery/jobs/v2/internal/jobs_rest_stub.h"
#include "google/cloud/bigquery/jobs/v2/internal/jobs_retry_traits.h"
#include "google/cloud/bigquery/jobs/v2/jobs_connection.h"
#include "google/cloud/bigquery/jobs/v2/jobs_connection_idempotency_policy.h"
#include "google/cloud/bigquery/jobs/v2/jobs_options.h"
#include "google/cloud/background_threads.h"
#include "google/cloud/backoff_policy.h"
#include "google/cloud/options.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace bigquery_jobs_v2_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

class JobsRestConnectionImpl : public bigquery_jobs_v2::JobsConnection {
 public:
  ~JobsRestConnectionImpl() override = default;

  JobsRestConnectionImpl(
      std::unique_ptr<google::cloud::BackgroundThreads> background,
      std::shared_ptr<bigquery_jobs_v2_internal::JobsRestStub> stub,
      Options options);

  Options options() override { return options_; }

  StatusOr<google::cloud::cpp::bigquery::v2::JobCancelResponse> Cancel(
      google::cloud::cpp::bigquery::jobs::v2::CancelRequest const& request)
      override;

  Status DeleteJob(
      google::cloud::cpp::bigquery::jobs::v2::DeleteJobRequest const& request)
      override;

  StatusOr<google::cloud::cpp::bigquery::v2::Job> GetJob(
      google::cloud::cpp::bigquery::jobs::v2::GetJobRequest const& request)
      override;

  StatusOr<google::cloud::cpp::bigquery::v2::GetQueryResultsResponse>
  GetQueryResults(
      google::cloud::cpp::bigquery::jobs::v2::GetQueryResultsRequest const&
          request) override;

  StatusOr<google::cloud::cpp::bigquery::v2::Job> InsertJob(
      google::cloud::cpp::bigquery::jobs::v2::InsertJobRequest const& request)
      override;

  StatusOr<google::cloud::cpp::bigquery::v2::JobList> ListJobs(
      google::cloud::cpp::bigquery::jobs::v2::ListJobsRequest const& request)
      override;

  StatusOr<google::cloud::cpp::bigquery::v2::QueryResponse> Query(
      google::cloud::cpp::bigquery::jobs::v2::QueryRequest const& request)
      override;

 private:
  static std::unique_ptr<bigquery_jobs_v2::JobsRetryPolicy> retry_policy(
      Options const& options) {
    return options.get<bigquery_jobs_v2::JobsRetryPolicyOption>()->clone();
  }

  static std::unique_ptr<BackoffPolicy> backoff_policy(Options const& options) {
    return options.get<bigquery_jobs_v2::JobsBackoffPolicyOption>()->clone();
  }

  static std::unique_ptr<bigquery_jobs_v2::JobsConnectionIdempotencyPolicy>
  idempotency_policy(Options const& options) {
    return options
        .get<bigquery_jobs_v2::JobsConnectionIdempotencyPolicyOption>()
        ->clone();
  }

  std::unique_ptr<google::cloud::BackgroundThreads> background_;
  std::shared_ptr<bigquery_jobs_v2_internal::JobsRestStub> stub_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace bigquery_jobs_v2_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGQUERY_JOBS_V2_INTERNAL_JOBS_REST_CONNECTION_IMPL_H
