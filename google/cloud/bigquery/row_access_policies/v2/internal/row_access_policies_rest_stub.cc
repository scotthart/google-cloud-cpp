// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source:
// google/cloud/bigquery/row_access_policies/v2/row_access_policies.proto

#include "google/cloud/bigquery/row_access_policies/v2/internal/row_access_policies_rest_stub.h"
#include "google/cloud/common_options.h"
#include "google/cloud/internal/absl_str_cat_quiet.h"
#include "google/cloud/internal/rest_stub_helpers.h"
#include "google/cloud/status_or.h"
#include <google/cloud/bigquery/row_access_policies/v2/row_access_policies.pb.h>
#include <memory>
#include <utility>

namespace google {
namespace cloud {
namespace bigquery_row_access_policies_v2_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

DefaultRowAccessPoliciesRestStub::DefaultRowAccessPoliciesRestStub(
    Options options)
    : service_(rest_internal::MakePooledRestClient(
          options.get<EndpointOption>(), options)),
      options_(std::move(options)) {}

DefaultRowAccessPoliciesRestStub::DefaultRowAccessPoliciesRestStub(
    std::shared_ptr<rest_internal::RestClient> service, Options options)
    : service_(std::move(service)), options_(std::move(options)) {}

StatusOr<google::cloud::cpp::bigquery::v2::Policy>
DefaultRowAccessPoliciesRestStub::GetIamPolicy(
    google::cloud::rest_internal::RestContext& rest_context,
    Options const& options,
    google::cloud::cpp::bigquery::row_access_policies::v2::
        GetIamPolicyRequest const& request) {
  return rest_internal::Post<google::cloud::cpp::bigquery::v2::Policy>(
      *service_, rest_context, request.get_iam_policy_request_resource(), false,
      absl::StrCat("/", "bigquery", "/",
                   rest_internal::DetermineApiVersion("v2", options), "/",
                   request.resource(), ":getIamPolicy"));
}

StatusOr<google::cloud::cpp::bigquery::v2::ListRowAccessPoliciesResponse>
DefaultRowAccessPoliciesRestStub::ListRowAccessPolicies(
    google::cloud::rest_internal::RestContext& rest_context,
    Options const& options,
    google::cloud::cpp::bigquery::row_access_policies::v2::
        ListRowAccessPoliciesRequest const& request) {
  return rest_internal::Get<
      google::cloud::cpp::bigquery::v2::ListRowAccessPoliciesResponse>(
      *service_, rest_context, request, false,
      absl::StrCat("/", "bigquery", "/",
                   rest_internal::DetermineApiVersion("v2", options), "/",
                   "projects", "/", request.project_id(), "/", "datasets", "/",
                   request.dataset_id(), "/", "tables", "/", request.table_id(),
                   "/", "rowAccessPolicies"),
      rest_internal::TrimEmptyQueryParameters(
          {std::make_pair("page_size", std::to_string(request.page_size())),
           std::make_pair("page_token", request.page_token())}));
}

StatusOr<google::cloud::cpp::bigquery::v2::TestIamPermissionsResponse>
DefaultRowAccessPoliciesRestStub::TestIamPermissions(
    google::cloud::rest_internal::RestContext& rest_context,
    Options const& options,
    google::cloud::cpp::bigquery::row_access_policies::v2::
        TestIamPermissionsRequest const& request) {
  return rest_internal::Post<
      google::cloud::cpp::bigquery::v2::TestIamPermissionsResponse>(
      *service_, rest_context, request.test_iam_permissions_request_resource(),
      false,
      absl::StrCat("/", "bigquery", "/",
                   rest_internal::DetermineApiVersion("v2", options), "/",
                   request.resource(), ":testIamPermissions"));
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace bigquery_row_access_policies_v2_internal
}  // namespace cloud
}  // namespace google
