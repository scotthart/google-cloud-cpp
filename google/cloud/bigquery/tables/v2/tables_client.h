// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/bigquery/tables/v2/tables.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGQUERY_TABLES_V2_TABLES_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGQUERY_TABLES_V2_TABLES_CLIENT_H

#include "google/cloud/bigquery/tables/v2/tables_rest_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>
#include <string>

namespace google {
namespace cloud {
namespace bigquery_tables_v2 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the tables resource.
/// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class TablesClient {
 public:
  explicit TablesClient(std::shared_ptr<TablesConnection> connection,
                        Options opts = {});
  ~TablesClient();

  ///@{
  /// @name Copy and move support
  TablesClient(TablesClient const&) = default;
  TablesClient& operator=(TablesClient const&) = default;
  TablesClient(TablesClient&&) = default;
  TablesClient& operator=(TablesClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(TablesClient const& a, TablesClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(TablesClient const& a, TablesClient const& b) {
    return !(a == b);
  }
  ///@}

  // clang-format off
  ///
  /// Deletes the table specified by tableId from the dataset. If the table
  /// contains data, all the data will be deleted.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/delete
  ///
  /// @param project_id  Required. Project ID of the table to delete
  /// @param dataset_id  Required. Dataset ID of the table to delete
  /// @param table_id  Required. Table ID of the table to delete
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.DeleteTableRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L158}
  ///
  // clang-format on
  Status DeleteTable(std::string const& project_id,
                     std::string const& dataset_id, std::string const& table_id,
                     Options opts = {});

  // clang-format off
  ///
  /// Deletes the table specified by tableId from the dataset. If the table
  /// contains data, all the data will be deleted.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/delete
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.tables.v2.DeleteTableRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.DeleteTableRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L158}
  ///
  // clang-format on
  Status DeleteTable(
      google::cloud::cpp::bigquery::tables::v2::DeleteTableRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Gets the specified table resource by table ID. This method does not return
  /// the data in the table, it only returns the table resource, which describes
  /// the structure of this table.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/get
  ///
  /// @param project_id  Required. Project ID of the requested table
  /// @param dataset_id  Required. Dataset ID of the requested table
  /// @param table_id  Required. Table ID of the requested table
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Table])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.GetTableRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L186}
  /// [google.cloud.cpp.bigquery.v2.Table]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_001.proto#L232}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Table> GetTable(
      std::string const& project_id, std::string const& dataset_id,
      std::string const& table_id, Options opts = {});

  // clang-format off
  ///
  /// Gets the specified table resource by table ID. This method does not return
  /// the data in the table, it only returns the table resource, which describes
  /// the structure of this table.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/get
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.tables.v2.GetTableRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Table])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.GetTableRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L186}
  /// [google.cloud.cpp.bigquery.v2.Table]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_001.proto#L232}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Table> GetTable(
      google::cloud::cpp::bigquery::tables::v2::GetTableRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Gets the access control policy for a resource. Returns an empty policy if
  /// the resource exists and does not have a policy set.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/getIamPolicy
  ///
  /// @param resource  REQUIRED: The resource for which the policy is being requested. See
  ///  [Resource names](https://cloud.google.com/apis/design/resource_names) for
  ///  the appropriate value for this field.
  /// @param get_iam_policy_request_resource  The GetIamPolicyRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Policy])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.GetIamPolicyRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L173}
  /// [google.cloud.cpp.bigquery.v2.Policy]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_003.proto#L230}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Policy> GetIamPolicy(
      std::string const& resource,
      google::cloud::cpp::bigquery::v2::GetIamPolicyRequest const&
          get_iam_policy_request_resource,
      Options opts = {});

  // clang-format off
  ///
  /// Gets the access control policy for a resource. Returns an empty policy if
  /// the resource exists and does not have a policy set.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/getIamPolicy
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.tables.v2.GetIamPolicyRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Policy])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.GetIamPolicyRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L173}
  /// [google.cloud.cpp.bigquery.v2.Policy]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_003.proto#L230}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Policy> GetIamPolicy(
      google::cloud::cpp::bigquery::tables::v2::GetIamPolicyRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Creates a new, empty table in the dataset.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/insert
  ///
  /// @param project_id  Required. Project ID of the new table
  /// @param dataset_id  Required. Dataset ID of the new table
  /// @param table_resource  The Table for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Table])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.InsertTableRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L225}
  /// [google.cloud.cpp.bigquery.v2.Table]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_001.proto#L232}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Table> InsertTable(
      std::string const& project_id, std::string const& dataset_id,
      google::cloud::cpp::bigquery::v2::Table const& table_resource,
      Options opts = {});

  // clang-format off
  ///
  /// Creates a new, empty table in the dataset.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/insert
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.tables.v2.InsertTableRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Table])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.InsertTableRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L225}
  /// [google.cloud.cpp.bigquery.v2.Table]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_001.proto#L232}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Table> InsertTable(
      google::cloud::cpp::bigquery::tables::v2::InsertTableRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Lists all tables in the specified dataset. Requires the READER dataset
  /// role.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/list
  ///
  /// @param project_id  Required. Project ID of the tables to list
  /// @param dataset_id  Required. Dataset ID of the tables to list
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.TableList])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.ListTablesRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L240}
  /// [google.cloud.cpp.bigquery.v2.TableList]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_001.proto#L513}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::TableList> ListTables(
      std::string const& project_id, std::string const& dataset_id,
      Options opts = {});

  // clang-format off
  ///
  /// Lists all tables in the specified dataset. Requires the READER dataset
  /// role.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/list
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.tables.v2.ListTablesRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.TableList])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.ListTablesRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L240}
  /// [google.cloud.cpp.bigquery.v2.TableList]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_001.proto#L513}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::TableList> ListTables(
      google::cloud::cpp::bigquery::tables::v2::ListTablesRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Updates information in an existing table. The update method replaces the
  /// entire table resource, whereas the patch method only replaces fields that
  /// are provided in the submitted table resource. This method supports RFC5789
  /// patch semantics.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/patch
  ///
  /// @param project_id  Required. Project ID of the table to update
  /// @param dataset_id  Required. Dataset ID of the table to update
  /// @param table_id  Required. Table ID of the table to update
  /// @param table_resource  The Table for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Table])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.PatchTableRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L259}
  /// [google.cloud.cpp.bigquery.v2.Table]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_001.proto#L232}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Table> PatchTable(
      std::string const& project_id, std::string const& dataset_id,
      std::string const& table_id,
      google::cloud::cpp::bigquery::v2::Table const& table_resource,
      Options opts = {});

  // clang-format off
  ///
  /// Updates information in an existing table. The update method replaces the
  /// entire table resource, whereas the patch method only replaces fields that
  /// are provided in the submitted table resource. This method supports RFC5789
  /// patch semantics.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/patch
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.tables.v2.PatchTableRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Table])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.PatchTableRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L259}
  /// [google.cloud.cpp.bigquery.v2.Table]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_001.proto#L232}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Table> PatchTable(
      google::cloud::cpp::bigquery::tables::v2::PatchTableRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Sets the access control policy on the specified resource. Replaces any
  /// existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
  /// `PERMISSION_DENIED` errors.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/setIamPolicy
  ///
  /// @param resource  REQUIRED: The resource for which the policy is being specified. See
  ///  [Resource names](https://cloud.google.com/apis/design/resource_names) for
  ///  the appropriate value for this field.
  /// @param set_iam_policy_request_resource  The SetIamPolicyRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Policy])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.SetIamPolicyRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L281}
  /// [google.cloud.cpp.bigquery.v2.Policy]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_003.proto#L230}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Policy> SetIamPolicy(
      std::string const& resource,
      google::cloud::cpp::bigquery::v2::SetIamPolicyRequest const&
          set_iam_policy_request_resource,
      Options opts = {});

  // clang-format off
  ///
  /// Sets the access control policy on the specified resource. Replaces any
  /// existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
  /// `PERMISSION_DENIED` errors.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/setIamPolicy
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.tables.v2.SetIamPolicyRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Policy])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.SetIamPolicyRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L281}
  /// [google.cloud.cpp.bigquery.v2.Policy]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_003.proto#L230}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Policy> SetIamPolicy(
      google::cloud::cpp::bigquery::tables::v2::SetIamPolicyRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Returns permissions that a caller has on the specified resource. If the
  /// resource does not exist, this will return an empty set of permissions, not
  /// a `NOT_FOUND` error. Note: This operation is designed to be used for
  /// building permission-aware UIs and command-line tools, not for authorization
  /// checking. This operation may "fail open" without warning.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/testIamPermissions
  ///
  /// @param resource  REQUIRED: The resource for which the policy detail is being requested. See
  ///  [Resource names](https://cloud.google.com/apis/design/resource_names) for
  ///  the appropriate value for this field.
  /// @param test_iam_permissions_request_resource  The TestIamPermissionsRequest for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.TestIamPermissionsResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.TestIamPermissionsRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L294}
  /// [google.cloud.cpp.bigquery.v2.TestIamPermissionsResponse]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_003.proto#L286}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::TestIamPermissionsResponse>
  TestIamPermissions(
      std::string const& resource,
      google::cloud::cpp::bigquery::v2::TestIamPermissionsRequest const&
          test_iam_permissions_request_resource,
      Options opts = {});

  // clang-format off
  ///
  /// Returns permissions that a caller has on the specified resource. If the
  /// resource does not exist, this will return an empty set of permissions, not
  /// a `NOT_FOUND` error. Note: This operation is designed to be used for
  /// building permission-aware UIs and command-line tools, not for authorization
  /// checking. This operation may "fail open" without warning.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/testIamPermissions
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.tables.v2.TestIamPermissionsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.TestIamPermissionsResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.TestIamPermissionsRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L294}
  /// [google.cloud.cpp.bigquery.v2.TestIamPermissionsResponse]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_003.proto#L286}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::TestIamPermissionsResponse>
  TestIamPermissions(
      google::cloud::cpp::bigquery::tables::v2::TestIamPermissionsRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Updates information in an existing table. The update method replaces the
  /// entire Table resource, whereas the patch method only replaces fields that
  /// are provided in the submitted Table resource.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/update
  ///
  /// @param project_id  Required. Project ID of the table to update
  /// @param dataset_id  Required. Dataset ID of the table to update
  /// @param table_id  Required. Table ID of the table to update
  /// @param table_resource  The Table for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Table])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.UpdateTableRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L308}
  /// [google.cloud.cpp.bigquery.v2.Table]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_001.proto#L232}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Table> UpdateTable(
      std::string const& project_id, std::string const& dataset_id,
      std::string const& table_id,
      google::cloud::cpp::bigquery::v2::Table const& table_resource,
      Options opts = {});

  // clang-format off
  ///
  /// Updates information in an existing table. The update method replaces the
  /// entire Table resource, whereas the patch method only replaces fields that
  /// are provided in the submitted Table resource.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/update
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.tables.v2.UpdateTableRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Table])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.tables.v2.UpdateTableRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/tables/v2/tables.proto#L308}
  /// [google.cloud.cpp.bigquery.v2.Table]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_001.proto#L232}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Table> UpdateTable(
      google::cloud::cpp::bigquery::tables::v2::UpdateTableRequest const&
          request,
      Options opts = {});

 private:
  std::shared_ptr<TablesConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace bigquery_tables_v2
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGQUERY_TABLES_V2_TABLES_CLIENT_H
