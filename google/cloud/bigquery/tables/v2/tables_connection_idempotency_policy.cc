// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/bigquery/tables/v2/tables.proto

#include "google/cloud/bigquery/tables/v2/tables_connection_idempotency_policy.h"
#include <memory>

namespace google {
namespace cloud {
namespace bigquery_tables_v2 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

using ::google::cloud::Idempotency;

TablesConnectionIdempotencyPolicy::~TablesConnectionIdempotencyPolicy() =
    default;

std::unique_ptr<TablesConnectionIdempotencyPolicy>
TablesConnectionIdempotencyPolicy::clone() const {
  return std::make_unique<TablesConnectionIdempotencyPolicy>(*this);
}

Idempotency TablesConnectionIdempotencyPolicy::DeleteTable(
    google::cloud::cpp::bigquery::tables::v2::DeleteTableRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency TablesConnectionIdempotencyPolicy::GetTable(
    google::cloud::cpp::bigquery::tables::v2::GetTableRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency TablesConnectionIdempotencyPolicy::GetIamPolicy(
    google::cloud::cpp::bigquery::tables::v2::GetIamPolicyRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency TablesConnectionIdempotencyPolicy::InsertTable(
    google::cloud::cpp::bigquery::tables::v2::InsertTableRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency TablesConnectionIdempotencyPolicy::ListTables(
    google::cloud::cpp::bigquery::tables::v2::ListTablesRequest const&) {
  return Idempotency::kIdempotent;
}

Idempotency TablesConnectionIdempotencyPolicy::PatchTable(
    google::cloud::cpp::bigquery::tables::v2::PatchTableRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency TablesConnectionIdempotencyPolicy::SetIamPolicy(
    google::cloud::cpp::bigquery::tables::v2::SetIamPolicyRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency TablesConnectionIdempotencyPolicy::TestIamPermissions(
    google::cloud::cpp::bigquery::tables::v2::
        TestIamPermissionsRequest const&) {
  return Idempotency::kNonIdempotent;
}

Idempotency TablesConnectionIdempotencyPolicy::UpdateTable(
    google::cloud::cpp::bigquery::tables::v2::UpdateTableRequest const&) {
  return Idempotency::kIdempotent;
}

std::unique_ptr<TablesConnectionIdempotencyPolicy>
MakeDefaultTablesConnectionIdempotencyPolicy() {
  return std::make_unique<TablesConnectionIdempotencyPolicy>();
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace bigquery_tables_v2
}  // namespace cloud
}  // namespace google
