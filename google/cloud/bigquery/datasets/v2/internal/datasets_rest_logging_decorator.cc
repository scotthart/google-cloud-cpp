// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/bigquery/datasets/v2/datasets.proto

#include "google/cloud/bigquery/datasets/v2/internal/datasets_rest_logging_decorator.h"
#include "google/cloud/internal/log_wrapper.h"
#include "google/cloud/status_or.h"
#include <memory>
#include <utility>

namespace google {
namespace cloud {
namespace bigquery_datasets_v2_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

DatasetsRestLogging::DatasetsRestLogging(
    std::shared_ptr<DatasetsRestStub> child, TracingOptions tracing_options,
    std::set<std::string> components)
    : child_(std::move(child)),
      tracing_options_(std::move(tracing_options)),
      components_(std::move(components)) {}

Status DatasetsRestLogging::DeleteDataset(
    rest_internal::RestContext& rest_context, Options const& options,
    google::cloud::cpp::bigquery::datasets::v2::DeleteDatasetRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context, Options const& options,
             google::cloud::cpp::bigquery::datasets::v2::
                 DeleteDatasetRequest const& request) {
        return child_->DeleteDataset(rest_context, options, request);
      },
      rest_context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::bigquery::v2::Dataset>
DatasetsRestLogging::GetDataset(
    rest_internal::RestContext& rest_context, Options const& options,
    google::cloud::cpp::bigquery::datasets::v2::GetDatasetRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          rest_internal::RestContext& rest_context, Options const& options,
          google::cloud::cpp::bigquery::datasets::v2::GetDatasetRequest const&
              request) {
        return child_->GetDataset(rest_context, options, request);
      },
      rest_context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::bigquery::v2::Dataset>
DatasetsRestLogging::InsertDataset(
    rest_internal::RestContext& rest_context, Options const& options,
    google::cloud::cpp::bigquery::datasets::v2::InsertDatasetRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context, Options const& options,
             google::cloud::cpp::bigquery::datasets::v2::
                 InsertDatasetRequest const& request) {
        return child_->InsertDataset(rest_context, options, request);
      },
      rest_context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::bigquery::v2::DatasetList>
DatasetsRestLogging::ListDatasets(
    rest_internal::RestContext& rest_context, Options const& options,
    google::cloud::cpp::bigquery::datasets::v2::ListDatasetsRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          rest_internal::RestContext& rest_context, Options const& options,
          google::cloud::cpp::bigquery::datasets::v2::ListDatasetsRequest const&
              request) {
        return child_->ListDatasets(rest_context, options, request);
      },
      rest_context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::bigquery::v2::Dataset>
DatasetsRestLogging::PatchDataset(
    rest_internal::RestContext& rest_context, Options const& options,
    google::cloud::cpp::bigquery::datasets::v2::PatchDatasetRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](
          rest_internal::RestContext& rest_context, Options const& options,
          google::cloud::cpp::bigquery::datasets::v2::PatchDatasetRequest const&
              request) {
        return child_->PatchDataset(rest_context, options, request);
      },
      rest_context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::bigquery::v2::Dataset>
DatasetsRestLogging::Undelete(
    rest_internal::RestContext& rest_context, Options const& options,
    google::cloud::cpp::bigquery::datasets::v2::UndeleteRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context, Options const& options,
             google::cloud::cpp::bigquery::datasets::v2::UndeleteRequest const&
                 request) {
        return child_->Undelete(rest_context, options, request);
      },
      rest_context, options, request, __func__, tracing_options_);
}

StatusOr<google::cloud::cpp::bigquery::v2::Dataset>
DatasetsRestLogging::UpdateDataset(
    rest_internal::RestContext& rest_context, Options const& options,
    google::cloud::cpp::bigquery::datasets::v2::UpdateDatasetRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](rest_internal::RestContext& rest_context, Options const& options,
             google::cloud::cpp::bigquery::datasets::v2::
                 UpdateDatasetRequest const& request) {
        return child_->UpdateDataset(rest_context, options, request);
      },
      rest_context, options, request, __func__, tracing_options_);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace bigquery_datasets_v2_internal
}  // namespace cloud
}  // namespace google
