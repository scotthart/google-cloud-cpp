// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/bigquery/models/v2/models.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGQUERY_MODELS_V2_MODELS_CLIENT_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGQUERY_MODELS_V2_MODELS_CLIENT_H

#include "google/cloud/bigquery/models/v2/models_rest_connection.h"
#include "google/cloud/future.h"
#include "google/cloud/options.h"
#include "google/cloud/polling_policy.h"
#include "google/cloud/status_or.h"
#include "google/cloud/version.h"
#include <map>
#include <memory>
#include <string>

namespace google {
namespace cloud {
namespace bigquery_models_v2 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

///
/// Service for the models resource.
/// https://cloud.google.com/bigquery/docs/reference/rest/v2/models
///
/// @par Equality
///
/// Instances of this class created via copy-construction or copy-assignment
/// always compare equal. Instances created with equal
/// `std::shared_ptr<*Connection>` objects compare equal. Objects that compare
/// equal share the same underlying resources.
///
/// @par Performance
///
/// Creating a new instance of this class is a relatively expensive operation,
/// new objects establish new connections to the service. In contrast,
/// copy-construction, move-construction, and the corresponding assignment
/// operations are relatively efficient as the copies share all underlying
/// resources.
///
/// @par Thread Safety
///
/// Concurrent access to different instances of this class, even if they compare
/// equal, is guaranteed to work. Two or more threads operating on the same
/// instance of this class is not guaranteed to work. Since copy-construction
/// and move-construction is a relatively efficient operation, consider using
/// such a copy when using this class from multiple threads.
///
class ModelsClient {
 public:
  explicit ModelsClient(std::shared_ptr<ModelsConnection> connection,
                        Options opts = {});
  ~ModelsClient();

  ///@{
  /// @name Copy and move support
  ModelsClient(ModelsClient const&) = default;
  ModelsClient& operator=(ModelsClient const&) = default;
  ModelsClient(ModelsClient&&) = default;
  ModelsClient& operator=(ModelsClient&&) = default;
  ///@}

  ///@{
  /// @name Equality
  friend bool operator==(ModelsClient const& a, ModelsClient const& b) {
    return a.connection_ == b.connection_;
  }
  friend bool operator!=(ModelsClient const& a, ModelsClient const& b) {
    return !(a == b);
  }
  ///@}

  // clang-format off
  ///
  /// Deletes the model specified by modelId from the dataset.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/models/delete
  ///
  /// @param project_id  Required. Project ID of the model to delete.
  /// @param dataset_id  Required. Dataset ID of the model to delete.
  /// @param model_id  Required. Model ID of the model to delete.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.models.v2.DeleteModelRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/models/v2/models.proto#L83}
  ///
  // clang-format on
  Status DeleteModel(std::string const& project_id,
                     std::string const& dataset_id, std::string const& model_id,
                     Options opts = {});

  // clang-format off
  ///
  /// Deletes the model specified by modelId from the dataset.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/models/delete
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.models.v2.DeleteModelRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return a [`Status`] object. If the request failed, the
  ///     status contains the details of the failure.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.models.v2.DeleteModelRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/models/v2/models.proto#L83}
  ///
  // clang-format on
  Status DeleteModel(
      google::cloud::cpp::bigquery::models::v2::DeleteModelRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Gets the specified model resource by model ID.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/models/get
  ///
  /// @param project_id  Required. Project ID of the requested model.
  /// @param dataset_id  Required. Dataset ID of the requested model.
  /// @param model_id  Required. Model ID of the requested model.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Model])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.models.v2.GetModelRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/models/v2/models.proto#L98}
  /// [google.cloud.cpp.bigquery.v2.Model]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_006.proto#L218}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Model> GetModel(
      std::string const& project_id, std::string const& dataset_id,
      std::string const& model_id, Options opts = {});

  // clang-format off
  ///
  /// Gets the specified model resource by model ID.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/models/get
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.models.v2.GetModelRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Model])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.models.v2.GetModelRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/models/v2/models.proto#L98}
  /// [google.cloud.cpp.bigquery.v2.Model]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_006.proto#L218}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Model> GetModel(
      google::cloud::cpp::bigquery::models::v2::GetModelRequest const& request,
      Options opts = {});

  // clang-format off
  ///
  /// Lists all models in the specified dataset. Requires the READER dataset
  /// role. After retrieving the list of models, you can get information about a
  /// particular model by calling the models.get method.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/models/list
  ///
  /// @param project_id  Required. Project ID of the models to list.
  /// @param dataset_id  Required. Dataset ID of the models to list.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.ListModelsResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.models.v2.ListModelsRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/models/v2/models.proto#L113}
  /// [google.cloud.cpp.bigquery.v2.ListModelsResponse]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_006.proto#L209}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::ListModelsResponse> ListModels(
      std::string const& project_id, std::string const& dataset_id,
      Options opts = {});

  // clang-format off
  ///
  /// Lists all models in the specified dataset. Requires the READER dataset
  /// role. After retrieving the list of models, you can get information about a
  /// particular model by calling the models.get method.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/models/list
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.models.v2.ListModelsRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.ListModelsResponse])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.models.v2.ListModelsRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/models/v2/models.proto#L113}
  /// [google.cloud.cpp.bigquery.v2.ListModelsResponse]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_006.proto#L209}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::ListModelsResponse> ListModels(
      google::cloud::cpp::bigquery::models::v2::ListModelsRequest const&
          request,
      Options opts = {});

  // clang-format off
  ///
  /// Patch specific fields in the specified model.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/models/patch
  ///
  /// @param project_id  Required. Project ID of the model to patch.
  /// @param dataset_id  Required. Dataset ID of the model to patch.
  /// @param model_id  Required. Model ID of the model to patch.
  /// @param model_resource  The Model for this request.
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Model])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.models.v2.PatchModelRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/models/v2/models.proto#L131}
  /// [google.cloud.cpp.bigquery.v2.Model]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_006.proto#L218}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Model> PatchModel(
      std::string const& project_id, std::string const& dataset_id,
      std::string const& model_id,
      google::cloud::cpp::bigquery::v2::Model const& model_resource,
      Options opts = {});

  // clang-format off
  ///
  /// Patch specific fields in the specified model.
  /// https://cloud.google.com/bigquery/docs/reference/rest/v2/models/patch
  ///
  /// @param request Unary RPCs, such as the one wrapped by this
  ///     function, receive a single `request` proto message which includes all
  ///     the inputs for the RPC. In this case, the proto message is a
  ///     [google.cloud.cpp.bigquery.models.v2.PatchModelRequest].
  ///     Proto messages are converted to C++ classes by Protobuf, using the
  ///     [Protobuf mapping rules].
  /// @param opts Optional. Override the class-level options, such as retry and
  ///     backoff policies.
  /// @return the result of the RPC. The response message type
  ///     ([google.cloud.cpp.bigquery.v2.Model])
  ///     is mapped to a C++ class using the [Protobuf mapping rules].
  ///     If the request fails, the [`StatusOr`] contains the error details.
  ///
  /// [Protobuf mapping rules]: https://protobuf.dev/reference/cpp/cpp-generated/
  /// [input iterator requirements]: https://en.cppreference.com/w/cpp/named_req/InputIterator
  /// [`std::string`]: https://en.cppreference.com/w/cpp/string/basic_string
  /// [`future`]: @ref google::cloud::future
  /// [`StatusOr`]: @ref google::cloud::StatusOr
  /// [`Status`]: @ref google::cloud::Status
  /// [google.cloud.cpp.bigquery.models.v2.PatchModelRequest]: @cloud_cpp_reference_link{google/cloud/bigquery/models/v2/models.proto#L131}
  /// [google.cloud.cpp.bigquery.v2.Model]: @cloud_cpp_reference_link{google/cloud/bigquery/v2/internal/common_006.proto#L218}
  ///
  // clang-format on
  StatusOr<google::cloud::cpp::bigquery::v2::Model> PatchModel(
      google::cloud::cpp::bigquery::models::v2::PatchModelRequest const&
          request,
      Options opts = {});

 private:
  std::shared_ptr<ModelsConnection> connection_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace bigquery_models_v2
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGQUERY_MODELS_V2_MODELS_CLIENT_H
