// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/bigquery/v2/job.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGQUERYCONTROL_V2_JOB_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGQUERYCONTROL_V2_JOB_H

#include "google/cloud/repeated_field.h"
#include "google/cloud/version.h"
#include <google/cloud/bigquery/v2/job.pb.h>

namespace google {
namespace cloud {
namespace bigquerycontrol_v2 {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

class Job {
 public:
  Job() = default;
  // converting constructors
  Job(google::cloud::bigquery::v2::Job const& message);
  Job(google::cloud::bigquery::v2::Job && message);
  // conversion operators
  operator google::cloud::bigquery::v2::Job() const&;
  operator google::cloud::bigquery::v2::Job() &&;

  // kind
  std::string kind() const;

  // etag
  std::string etag() const;

  // id
  std::string id() const;

  // self_link
  std::string self_link() const;

  // user_email
  std::string user_email() const;

  // configuration
  google::cloud::bigquery::v2::JobConfiguration configuration() const;
  Job& set_configuration(google::cloud::bigquery::v2::JobConfiguration const& configuration);
  Job& set_configuration(google::cloud::bigquery::v2::JobConfiguration && configuration);

  // job_reference
  google::cloud::bigquery::v2::JobReference job_reference() const;
  Job& set_job_reference(google::cloud::bigquery::v2::JobReference const& job_reference);
  Job& set_job_reference(google::cloud::bigquery::v2::JobReference && job_reference);

  // statistics
  google::cloud::bigquery::v2::JobStatistics statistics() const;

  // status
  google::cloud::bigquery::v2::JobStatus status() const;

  // principal_subject
  std::string principal_subject() const;

  // job_creation_reason
  google::cloud::bigquery::v2::JobCreationReason job_creation_reason() const;

 private:
  google::cloud::bigquery::v2::Job message_;
};

class CancelJobRequest {
 public:
  CancelJobRequest() = default;
  // converting constructors
  CancelJobRequest(google::cloud::bigquery::v2::CancelJobRequest const& message);
  CancelJobRequest(google::cloud::bigquery::v2::CancelJobRequest && message);
  // conversion operators
  operator google::cloud::bigquery::v2::CancelJobRequest() const&;
  operator google::cloud::bigquery::v2::CancelJobRequest() &&;

  // project_id
  std::string project_id() const;
  CancelJobRequest& set_project_id(std::string const& project_id);
  CancelJobRequest& set_project_id(std::string && project_id);

  // job_id
  std::string job_id() const;
  CancelJobRequest& set_job_id(std::string const& job_id);
  CancelJobRequest& set_job_id(std::string && job_id);

  // location
  std::string location() const;
  CancelJobRequest& set_location(std::string const& location);
  CancelJobRequest& set_location(std::string && location);

 private:
  google::cloud::bigquery::v2::CancelJobRequest message_;
};

class JobCancelResponse {
 public:
  JobCancelResponse() = default;
  // converting constructors
  JobCancelResponse(google::cloud::bigquery::v2::JobCancelResponse const& message);
  JobCancelResponse(google::cloud::bigquery::v2::JobCancelResponse && message);
  // conversion operators
  operator google::cloud::bigquery::v2::JobCancelResponse() const&;
  operator google::cloud::bigquery::v2::JobCancelResponse() &&;

  // kind
  std::string kind() const;
  JobCancelResponse& set_kind(std::string const& kind);
  JobCancelResponse& set_kind(std::string && kind);

  // job
  google::cloud::bigquery::v2::Job job() const;
  JobCancelResponse& set_job(google::cloud::bigquery::v2::Job const& job);
  JobCancelResponse& set_job(google::cloud::bigquery::v2::Job && job);

 private:
  google::cloud::bigquery::v2::JobCancelResponse message_;
};

class GetJobRequest {
 public:
  GetJobRequest() = default;
  // converting constructors
  GetJobRequest(google::cloud::bigquery::v2::GetJobRequest const& message);
  GetJobRequest(google::cloud::bigquery::v2::GetJobRequest && message);
  // conversion operators
  operator google::cloud::bigquery::v2::GetJobRequest() const&;
  operator google::cloud::bigquery::v2::GetJobRequest() &&;

  // project_id
  std::string project_id() const;
  GetJobRequest& set_project_id(std::string const& project_id);
  GetJobRequest& set_project_id(std::string && project_id);

  // job_id
  std::string job_id() const;
  GetJobRequest& set_job_id(std::string const& job_id);
  GetJobRequest& set_job_id(std::string && job_id);

  // location
  std::string location() const;
  GetJobRequest& set_location(std::string const& location);
  GetJobRequest& set_location(std::string && location);

 private:
  google::cloud::bigquery::v2::GetJobRequest message_;
};

class InsertJobRequest {
 public:
  InsertJobRequest() = default;
  // converting constructors
  InsertJobRequest(google::cloud::bigquery::v2::InsertJobRequest const& message);
  InsertJobRequest(google::cloud::bigquery::v2::InsertJobRequest && message);
  // conversion operators
  operator google::cloud::bigquery::v2::InsertJobRequest() const&;
  operator google::cloud::bigquery::v2::InsertJobRequest() &&;

  // project_id
  std::string project_id() const;
  InsertJobRequest& set_project_id(std::string const& project_id);
  InsertJobRequest& set_project_id(std::string && project_id);

  // job
  google::cloud::bigquery::v2::Job job() const;
  InsertJobRequest& set_job(google::cloud::bigquery::v2::Job const& job);
  InsertJobRequest& set_job(google::cloud::bigquery::v2::Job && job);

 private:
  google::cloud::bigquery::v2::InsertJobRequest message_;
};

class DeleteJobRequest {
 public:
  DeleteJobRequest() = default;
  // converting constructors
  DeleteJobRequest(google::cloud::bigquery::v2::DeleteJobRequest const& message);
  DeleteJobRequest(google::cloud::bigquery::v2::DeleteJobRequest && message);
  // conversion operators
  operator google::cloud::bigquery::v2::DeleteJobRequest() const&;
  operator google::cloud::bigquery::v2::DeleteJobRequest() &&;

  // project_id
  std::string project_id() const;
  DeleteJobRequest& set_project_id(std::string const& project_id);
  DeleteJobRequest& set_project_id(std::string && project_id);

  // job_id
  std::string job_id() const;
  DeleteJobRequest& set_job_id(std::string const& job_id);
  DeleteJobRequest& set_job_id(std::string && job_id);

  // location
  std::string location() const;
  DeleteJobRequest& set_location(std::string const& location);
  DeleteJobRequest& set_location(std::string && location);

 private:
  google::cloud::bigquery::v2::DeleteJobRequest message_;
};

class ListJobsRequest {
 public:
  ListJobsRequest() = default;
  // converting constructors
  ListJobsRequest(google::cloud::bigquery::v2::ListJobsRequest const& message);
  ListJobsRequest(google::cloud::bigquery::v2::ListJobsRequest && message);
  // conversion operators
  operator google::cloud::bigquery::v2::ListJobsRequest() const&;
  operator google::cloud::bigquery::v2::ListJobsRequest() &&;

  // project_id
  std::string project_id() const;
  ListJobsRequest& set_project_id(std::string const& project_id);
  ListJobsRequest& set_project_id(std::string && project_id);

  // all_users
  bool all_users() const;
  ListJobsRequest& set_all_users(bool all_users);

  // max_results
  std::int32_t max_results() const;
  ListJobsRequest& set_max_results(std::int32_t max_results);

  // min_creation_time
  std::uint64_t min_creation_time() const;
  ListJobsRequest& set_min_creation_time(std::uint64_t min_creation_time);

  // max_creation_time
  std::uint64_t max_creation_time() const;
  ListJobsRequest& set_max_creation_time(std::uint64_t max_creation_time);

  // page_token
  std::string page_token() const;
  ListJobsRequest& set_page_token(std::string const& page_token);
  ListJobsRequest& set_page_token(std::string && page_token);

  // projection
  google::cloud::bigquery::v2::ListJobsRequest::Projection projection() const;
  ListJobsRequest& set_projection(google::cloud::bigquery::v2::ListJobsRequest::Projection projection);

  // state_filter
  google::cloud::bigquery::v2::ListJobsRequest::StateFilter const& state_filter(std::size_t index) const;
  google::cloud::RepeatedField<google::cloud::bigquery::v2::ListJobsRequest::StateFilter> const& state_filter() const;
  google::cloud::bigquery::v2::ListJobsRequest::StateFilter& AppendStateFilter();
  ListJobsRequest& AppendStateFilter(google::cloud::bigquery::v2::ListJobsRequest::StateFilter const& state_filter);
  ListJobsRequest& AppendStateFilter(google::cloud::bigquery::v2::ListJobsRequest::StateFilter && state_filter);
  google::protobuf::RepeatedField<google::cloud::bigquery::v2::ListJobsRequest::StateFilter>& mutable_state_filter();

  // parent_job_id
  std::string parent_job_id() const;
  ListJobsRequest& set_parent_job_id(std::string const& parent_job_id);
  ListJobsRequest& set_parent_job_id(std::string && parent_job_id);

 private:
  google::cloud::bigquery::v2::ListJobsRequest message_;
};

class ListFormatJob {
 public:
  ListFormatJob() = default;
  // converting constructors
  ListFormatJob(google::cloud::bigquery::v2::ListFormatJob const& message);
  ListFormatJob(google::cloud::bigquery::v2::ListFormatJob && message);
  // conversion operators
  operator google::cloud::bigquery::v2::ListFormatJob() const&;
  operator google::cloud::bigquery::v2::ListFormatJob() &&;

  // id
  std::string id() const;
  ListFormatJob& set_id(std::string const& id);
  ListFormatJob& set_id(std::string && id);

  // kind
  std::string kind() const;
  ListFormatJob& set_kind(std::string const& kind);
  ListFormatJob& set_kind(std::string && kind);

  // job_reference
  google::cloud::bigquery::v2::JobReference job_reference() const;
  ListFormatJob& set_job_reference(google::cloud::bigquery::v2::JobReference const& job_reference);
  ListFormatJob& set_job_reference(google::cloud::bigquery::v2::JobReference && job_reference);

  // state
  std::string state() const;
  ListFormatJob& set_state(std::string const& state);
  ListFormatJob& set_state(std::string && state);

  // error_result
  google::cloud::bigquery::v2::ErrorProto error_result() const;
  ListFormatJob& set_error_result(google::cloud::bigquery::v2::ErrorProto const& error_result);
  ListFormatJob& set_error_result(google::cloud::bigquery::v2::ErrorProto && error_result);

  // statistics
  google::cloud::bigquery::v2::JobStatistics statistics() const;

  // configuration
  google::cloud::bigquery::v2::JobConfiguration configuration() const;
  ListFormatJob& set_configuration(google::cloud::bigquery::v2::JobConfiguration const& configuration);
  ListFormatJob& set_configuration(google::cloud::bigquery::v2::JobConfiguration && configuration);

  // status
  google::cloud::bigquery::v2::JobStatus status() const;
  ListFormatJob& set_status(google::cloud::bigquery::v2::JobStatus const& status);
  ListFormatJob& set_status(google::cloud::bigquery::v2::JobStatus && status);

  // user_email
  std::string user_email() const;
  ListFormatJob& set_user_email(std::string const& user_email);
  ListFormatJob& set_user_email(std::string && user_email);

  // principal_subject
  std::string principal_subject() const;
  ListFormatJob& set_principal_subject(std::string const& principal_subject);
  ListFormatJob& set_principal_subject(std::string && principal_subject);

 private:
  google::cloud::bigquery::v2::ListFormatJob message_;
};

class JobList {
 public:
  JobList() = default;
  // converting constructors
  JobList(google::cloud::bigquery::v2::JobList const& message);
  JobList(google::cloud::bigquery::v2::JobList && message);
  // conversion operators
  operator google::cloud::bigquery::v2::JobList() const&;
  operator google::cloud::bigquery::v2::JobList() &&;

  // etag
  std::string etag() const;
  JobList& set_etag(std::string const& etag);
  JobList& set_etag(std::string && etag);

  // kind
  std::string kind() const;
  JobList& set_kind(std::string const& kind);
  JobList& set_kind(std::string && kind);

  // next_page_token
  std::string next_page_token() const;
  JobList& set_next_page_token(std::string const& next_page_token);
  JobList& set_next_page_token(std::string && next_page_token);

  // jobs
  google::cloud::bigquery::v2::ListFormatJob const& jobs(std::size_t index) const;
  google::cloud::RepeatedPtrField<google::cloud::bigquery::v2::ListFormatJob> const& jobs() const;
  google::cloud::bigquery::v2::ListFormatJob& AppendJobs();
  JobList& AppendJobs(google::cloud::bigquery::v2::ListFormatJob const& jobs);
  JobList& AppendJobs(google::cloud::bigquery::v2::ListFormatJob && jobs);
  google::protobuf::RepeatedPtrField<google::cloud::bigquery::v2::ListFormatJob>& mutable_jobs();

  // unreachable
  std::string const& unreachable(std::size_t index) const;
  google::cloud::RepeatedPtrField<std::string> const& unreachable() const;
  std::string& AppendUnreachable();
  JobList& AppendUnreachable(std::string const& unreachable);
  JobList& AppendUnreachable(std::string && unreachable);
  google::protobuf::RepeatedPtrField<std::string>& mutable_unreachable();

 private:
  google::cloud::bigquery::v2::JobList message_;
};

class GetQueryResultsRequest {
 public:
  GetQueryResultsRequest() = default;
  // converting constructors
  GetQueryResultsRequest(google::cloud::bigquery::v2::GetQueryResultsRequest const& message);
  GetQueryResultsRequest(google::cloud::bigquery::v2::GetQueryResultsRequest && message);
  // conversion operators
  operator google::cloud::bigquery::v2::GetQueryResultsRequest() const&;
  operator google::cloud::bigquery::v2::GetQueryResultsRequest() &&;

  // project_id
  std::string project_id() const;
  GetQueryResultsRequest& set_project_id(std::string const& project_id);
  GetQueryResultsRequest& set_project_id(std::string && project_id);

  // job_id
  std::string job_id() const;
  GetQueryResultsRequest& set_job_id(std::string const& job_id);
  GetQueryResultsRequest& set_job_id(std::string && job_id);

  // start_index
  std::uint64_t start_index() const;
  GetQueryResultsRequest& set_start_index(std::uint64_t start_index);

  // page_token
  std::string page_token() const;
  GetQueryResultsRequest& set_page_token(std::string const& page_token);
  GetQueryResultsRequest& set_page_token(std::string && page_token);

  // max_results
  std::uint32_t max_results() const;
  GetQueryResultsRequest& set_max_results(std::uint32_t max_results);

  // timeout_ms
  std::uint32_t timeout_ms() const;
  GetQueryResultsRequest& set_timeout_ms(std::uint32_t timeout_ms);

  // location
  std::string location() const;
  GetQueryResultsRequest& set_location(std::string const& location);
  GetQueryResultsRequest& set_location(std::string && location);

  // format_options
  google::cloud::bigquery::v2::DataFormatOptions format_options() const;
  GetQueryResultsRequest& set_format_options(google::cloud::bigquery::v2::DataFormatOptions const& format_options);
  GetQueryResultsRequest& set_format_options(google::cloud::bigquery::v2::DataFormatOptions && format_options);

 private:
  google::cloud::bigquery::v2::GetQueryResultsRequest message_;
};

class GetQueryResultsResponse {
 public:
  GetQueryResultsResponse() = default;
  // converting constructors
  GetQueryResultsResponse(google::cloud::bigquery::v2::GetQueryResultsResponse const& message);
  GetQueryResultsResponse(google::cloud::bigquery::v2::GetQueryResultsResponse && message);
  // conversion operators
  operator google::cloud::bigquery::v2::GetQueryResultsResponse() const&;
  operator google::cloud::bigquery::v2::GetQueryResultsResponse() &&;

  // kind
  std::string kind() const;
  GetQueryResultsResponse& set_kind(std::string const& kind);
  GetQueryResultsResponse& set_kind(std::string && kind);

  // etag
  std::string etag() const;
  GetQueryResultsResponse& set_etag(std::string const& etag);
  GetQueryResultsResponse& set_etag(std::string && etag);

  // schema
  google::cloud::bigquery::v2::TableSchema schema() const;
  GetQueryResultsResponse& set_schema(google::cloud::bigquery::v2::TableSchema const& schema);
  GetQueryResultsResponse& set_schema(google::cloud::bigquery::v2::TableSchema && schema);

  // job_reference
  google::cloud::bigquery::v2::JobReference job_reference() const;
  GetQueryResultsResponse& set_job_reference(google::cloud::bigquery::v2::JobReference const& job_reference);
  GetQueryResultsResponse& set_job_reference(google::cloud::bigquery::v2::JobReference && job_reference);

  // total_rows
  std::uint64_t total_rows() const;
  GetQueryResultsResponse& set_total_rows(std::uint64_t total_rows);

  // page_token
  std::string page_token() const;
  GetQueryResultsResponse& set_page_token(std::string const& page_token);
  GetQueryResultsResponse& set_page_token(std::string && page_token);

  // rows
  google::protobuf::Struct const& rows(std::size_t index) const;
  google::cloud::RepeatedPtrField<google::protobuf::Struct> const& rows() const;
  google::protobuf::Struct& AppendRows();
  GetQueryResultsResponse& AppendRows(google::protobuf::Struct const& rows);
  GetQueryResultsResponse& AppendRows(google::protobuf::Struct && rows);
  google::protobuf::RepeatedPtrField<google::protobuf::Struct>& mutable_rows();

  // total_bytes_processed
  std::int64_t total_bytes_processed() const;
  GetQueryResultsResponse& set_total_bytes_processed(std::int64_t total_bytes_processed);

  // job_complete
  bool job_complete() const;
  GetQueryResultsResponse& set_job_complete(bool job_complete);

  // errors
  google::cloud::bigquery::v2::ErrorProto const& errors(std::size_t index) const;
  google::cloud::RepeatedPtrField<google::cloud::bigquery::v2::ErrorProto> const& errors() const;

  // cache_hit
  bool cache_hit() const;
  GetQueryResultsResponse& set_cache_hit(bool cache_hit);

  // num_dml_affected_rows
  std::int64_t num_dml_affected_rows() const;

 private:
  google::cloud::bigquery::v2::GetQueryResultsResponse message_;
};

class PostQueryRequest {
 public:
  PostQueryRequest() = default;
  // converting constructors
  PostQueryRequest(google::cloud::bigquery::v2::PostQueryRequest const& message);
  PostQueryRequest(google::cloud::bigquery::v2::PostQueryRequest && message);
  // conversion operators
  operator google::cloud::bigquery::v2::PostQueryRequest() const&;
  operator google::cloud::bigquery::v2::PostQueryRequest() &&;

  // project_id
  std::string project_id() const;
  PostQueryRequest& set_project_id(std::string const& project_id);
  PostQueryRequest& set_project_id(std::string && project_id);

  // query_request
  google::cloud::bigquery::v2::QueryRequest query_request() const;
  PostQueryRequest& set_query_request(google::cloud::bigquery::v2::QueryRequest const& query_request);
  PostQueryRequest& set_query_request(google::cloud::bigquery::v2::QueryRequest && query_request);

 private:
  google::cloud::bigquery::v2::PostQueryRequest message_;
};

class QueryRequest {
 public:
  QueryRequest() = default;
  // converting constructors
  QueryRequest(google::cloud::bigquery::v2::QueryRequest const& message);
  QueryRequest(google::cloud::bigquery::v2::QueryRequest && message);
  // conversion operators
  operator google::cloud::bigquery::v2::QueryRequest() const&;
  operator google::cloud::bigquery::v2::QueryRequest() &&;

  // kind
  std::string kind() const;
  QueryRequest& set_kind(std::string const& kind);
  QueryRequest& set_kind(std::string && kind);

  // query
  std::string query() const;
  QueryRequest& set_query(std::string const& query);
  QueryRequest& set_query(std::string && query);

  // max_results
  std::uint32_t max_results() const;
  QueryRequest& set_max_results(std::uint32_t max_results);

  // default_dataset
  google::cloud::bigquery::v2::DatasetReference default_dataset() const;
  QueryRequest& set_default_dataset(google::cloud::bigquery::v2::DatasetReference const& default_dataset);
  QueryRequest& set_default_dataset(google::cloud::bigquery::v2::DatasetReference && default_dataset);

  // timeout_ms
  std::uint32_t timeout_ms() const;
  QueryRequest& set_timeout_ms(std::uint32_t timeout_ms);

  // dry_run
  bool dry_run() const;
  QueryRequest& set_dry_run(bool dry_run);

  // use_query_cache
  bool use_query_cache() const;
  QueryRequest& set_use_query_cache(bool use_query_cache);

  // use_legacy_sql
  bool use_legacy_sql() const;
  QueryRequest& set_use_legacy_sql(bool use_legacy_sql);

  // parameter_mode
  std::string parameter_mode() const;
  QueryRequest& set_parameter_mode(std::string const& parameter_mode);
  QueryRequest& set_parameter_mode(std::string && parameter_mode);

  // query_parameters
  google::cloud::bigquery::v2::QueryParameter const& query_parameters(std::size_t index) const;
  google::cloud::RepeatedPtrField<google::cloud::bigquery::v2::QueryParameter> const& query_parameters() const;
  google::cloud::bigquery::v2::QueryParameter& AppendQueryParameters();
  QueryRequest& AppendQueryParameters(google::cloud::bigquery::v2::QueryParameter const& query_parameters);
  QueryRequest& AppendQueryParameters(google::cloud::bigquery::v2::QueryParameter && query_parameters);
  google::protobuf::RepeatedPtrField<google::cloud::bigquery::v2::QueryParameter>& mutable_query_parameters();

  // location
  std::string location() const;
  QueryRequest& set_location(std::string const& location);
  QueryRequest& set_location(std::string && location);

  // format_options
  google::cloud::bigquery::v2::DataFormatOptions format_options() const;
  QueryRequest& set_format_options(google::cloud::bigquery::v2::DataFormatOptions const& format_options);
  QueryRequest& set_format_options(google::cloud::bigquery::v2::DataFormatOptions && format_options);

  // connection_properties
  google::cloud::bigquery::v2::ConnectionProperty const& connection_properties(std::size_t index) const;
  google::cloud::RepeatedPtrField<google::cloud::bigquery::v2::ConnectionProperty> const& connection_properties() const;
  google::cloud::bigquery::v2::ConnectionProperty& AppendConnectionProperties();
  QueryRequest& AppendConnectionProperties(google::cloud::bigquery::v2::ConnectionProperty const& connection_properties);
  QueryRequest& AppendConnectionProperties(google::cloud::bigquery::v2::ConnectionProperty && connection_properties);
  google::protobuf::RepeatedPtrField<google::cloud::bigquery::v2::ConnectionProperty>& mutable_connection_properties();

  // labels



  // maximum_bytes_billed
  std::int64_t maximum_bytes_billed() const;
  QueryRequest& set_maximum_bytes_billed(std::int64_t maximum_bytes_billed);

  // request_id
  std::string request_id() const;
  QueryRequest& set_request_id(std::string const& request_id);
  QueryRequest& set_request_id(std::string && request_id);

  // create_session
  bool create_session() const;
  QueryRequest& set_create_session(bool create_session);

  // job_creation_mode
  google::cloud::bigquery::v2::QueryRequest::JobCreationMode job_creation_mode() const;
  QueryRequest& set_job_creation_mode(google::cloud::bigquery::v2::QueryRequest::JobCreationMode job_creation_mode);

 private:
  google::cloud::bigquery::v2::QueryRequest message_;
};

class QueryResponse {
 public:
  QueryResponse() = default;
  // converting constructors
  QueryResponse(google::cloud::bigquery::v2::QueryResponse const& message);
  QueryResponse(google::cloud::bigquery::v2::QueryResponse && message);
  // conversion operators
  operator google::cloud::bigquery::v2::QueryResponse() const&;
  operator google::cloud::bigquery::v2::QueryResponse() &&;

  // kind
  std::string kind() const;
  QueryResponse& set_kind(std::string const& kind);
  QueryResponse& set_kind(std::string && kind);

  // schema
  google::cloud::bigquery::v2::TableSchema schema() const;
  QueryResponse& set_schema(google::cloud::bigquery::v2::TableSchema const& schema);
  QueryResponse& set_schema(google::cloud::bigquery::v2::TableSchema && schema);

  // job_reference
  google::cloud::bigquery::v2::JobReference job_reference() const;
  QueryResponse& set_job_reference(google::cloud::bigquery::v2::JobReference const& job_reference);
  QueryResponse& set_job_reference(google::cloud::bigquery::v2::JobReference && job_reference);

  // job_creation_reason
  google::cloud::bigquery::v2::JobCreationReason job_creation_reason() const;
  QueryResponse& set_job_creation_reason(google::cloud::bigquery::v2::JobCreationReason const& job_creation_reason);
  QueryResponse& set_job_creation_reason(google::cloud::bigquery::v2::JobCreationReason && job_creation_reason);

  // query_id
  std::string query_id() const;
  QueryResponse& set_query_id(std::string const& query_id);
  QueryResponse& set_query_id(std::string && query_id);

  // total_rows
  std::uint64_t total_rows() const;
  QueryResponse& set_total_rows(std::uint64_t total_rows);

  // page_token
  std::string page_token() const;
  QueryResponse& set_page_token(std::string const& page_token);
  QueryResponse& set_page_token(std::string && page_token);

  // rows
  google::protobuf::Struct const& rows(std::size_t index) const;
  google::cloud::RepeatedPtrField<google::protobuf::Struct> const& rows() const;
  google::protobuf::Struct& AppendRows();
  QueryResponse& AppendRows(google::protobuf::Struct const& rows);
  QueryResponse& AppendRows(google::protobuf::Struct && rows);
  google::protobuf::RepeatedPtrField<google::protobuf::Struct>& mutable_rows();

  // total_bytes_processed
  std::int64_t total_bytes_processed() const;
  QueryResponse& set_total_bytes_processed(std::int64_t total_bytes_processed);

  // job_complete
  bool job_complete() const;
  QueryResponse& set_job_complete(bool job_complete);

  // errors
  google::cloud::bigquery::v2::ErrorProto const& errors(std::size_t index) const;
  google::cloud::RepeatedPtrField<google::cloud::bigquery::v2::ErrorProto> const& errors() const;

  // cache_hit
  bool cache_hit() const;
  QueryResponse& set_cache_hit(bool cache_hit);

  // num_dml_affected_rows
  std::int64_t num_dml_affected_rows() const;

  // session_info
  google::cloud::bigquery::v2::SessionInfo session_info() const;

  // dml_stats
  google::cloud::bigquery::v2::DmlStats dml_stats() const;

 private:
  google::cloud::bigquery::v2::QueryResponse message_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace bigquerycontrol_v2
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_BIGQUERYCONTROL_V2_JOB_H
