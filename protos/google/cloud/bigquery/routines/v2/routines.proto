// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/bigquery_public_google_rest_v2.json
// revision: 20240124

syntax = "proto3";

package google.cloud.cpp.bigquery.routines.v2;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/cloud/bigquery/v2/internal/common_002.proto";
import "google/protobuf/empty.proto";

// Service for the routines resource.
// https://cloud.google.com/bigquery/docs/reference/rest/v2/routines
service Routines {
  option (google.api.default_host) = "bigquery.googleapis.com";
  option (google.api.oauth_scopes) =
      "https://www.googleapis.com/auth/bigquery,"
      "https://www.googleapis.com/auth/cloud-platform,"
      "https://www.googleapis.com/auth/cloud-platform.read-only";

  // Deletes the routine specified by routineId from the dataset.
  // https://cloud.google.com/bigquery/docs/reference/rest/v2/routines/delete
  rpc DeleteRoutine(DeleteRoutineRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/bigquery/v2/projects/{project_id}/datasets/{dataset_id}/routines/{routine_id}"
    };
    option (google.api.method_signature) = "project_id,dataset_id,routine_id";
  }

  // Gets the specified routine resource by routine ID.
  // https://cloud.google.com/bigquery/docs/reference/rest/v2/routines/get
  rpc GetRoutine(GetRoutineRequest)
      returns (google.cloud.cpp.bigquery.v2.Routine) {
    option (google.api.http) = {
      get: "/bigquery/v2/projects/{project_id}/datasets/{dataset_id}/routines/{routine_id}"
    };
    option (google.api.method_signature) = "project_id,dataset_id,routine_id";
  }

  // Creates a new routine in the dataset.
  // https://cloud.google.com/bigquery/docs/reference/rest/v2/routines/insert
  rpc InsertRoutine(InsertRoutineRequest)
      returns (google.cloud.cpp.bigquery.v2.Routine) {
    option (google.api.http) = {
      post: "/bigquery/v2/projects/{project_id}/datasets/{dataset_id}/routines"
      body: "routine_resource"
    };
    option (google.api.method_signature) =
        "project_id,dataset_id,routine_resource";
  }

  // Lists all routines in the specified dataset. Requires the READER dataset
  // role.
  // https://cloud.google.com/bigquery/docs/reference/rest/v2/routines/list
  rpc ListRoutines(ListRoutinesRequest)
      returns (google.cloud.cpp.bigquery.v2.ListRoutinesResponse) {
    option (google.api.http) = {
      get: "/bigquery/v2/projects/{project_id}/datasets/{dataset_id}/routines"
    };
    option (google.api.method_signature) = "project_id,dataset_id";
  }

  // Updates information in an existing routine. The update method replaces the
  // entire Routine resource.
  // https://cloud.google.com/bigquery/docs/reference/rest/v2/routines/update
  rpc UpdateRoutine(UpdateRoutineRequest)
      returns (google.cloud.cpp.bigquery.v2.Routine) {
    option (google.api.http) = {
      put: "/bigquery/v2/projects/{project_id}/datasets/{dataset_id}/routines/{routine_id}"
      body: "routine_resource"
    };
    option (google.api.method_signature) =
        "project_id,dataset_id,routine_id,routine_resource";
  }
}

// Request message for DeleteRoutine.
message DeleteRoutineRequest {
  // Required. Dataset ID of the routine to delete
  string dataset_id = 1
      [(google.api.field_behavior) = REQUIRED, json_name = "datasetId"];

  // Required. Project ID of the routine to delete
  string project_id = 2
      [(google.api.field_behavior) = REQUIRED, json_name = "projectId"];

  // Required. Routine ID of the routine to delete
  string routine_id = 3
      [(google.api.field_behavior) = REQUIRED, json_name = "routineId"];
}

// Request message for GetRoutine.
message GetRoutineRequest {
  // Required. Dataset ID of the requested routine
  string dataset_id = 1
      [(google.api.field_behavior) = REQUIRED, json_name = "datasetId"];

  // Required. Project ID of the requested routine
  string project_id = 2
      [(google.api.field_behavior) = REQUIRED, json_name = "projectId"];

  // If set, only the Routine fields in the field mask are returned in the
  // response. If unset, all Routine fields are returned.
  optional string read_mask = 3 [json_name = "readMask"];

  // Required. Routine ID of the requested routine
  string routine_id = 4
      [(google.api.field_behavior) = REQUIRED, json_name = "routineId"];
}

// Request message for InsertRoutine.
message InsertRoutineRequest {
  // Required. Dataset ID of the new routine
  string dataset_id = 1
      [(google.api.field_behavior) = REQUIRED, json_name = "datasetId"];

  // Required. Project ID of the new routine
  string project_id = 2
      [(google.api.field_behavior) = REQUIRED, json_name = "projectId"];

  // The Routine for this request.
  optional google.cloud.cpp.bigquery.v2.Routine routine_resource = 3
      [json_name = "__json_request_body"];
}

// Request message for ListRoutines.
message ListRoutinesRequest {
  // Required. Dataset ID of the routines to list
  string dataset_id = 1
      [(google.api.field_behavior) = REQUIRED, json_name = "datasetId"];

  // If set, then only the Routines matching this filter are returned. The
  // supported format is `routineType:{RoutineType}`, where `{RoutineType}` is a
  // RoutineType enum. For example: `routineType:SCALAR_FUNCTION`.
  optional string filter = 2 [json_name = "filter"];

  // The maximum number of results to return in a single response page. Leverage
  // the page tokens to iterate through the entire collection.
  optional uint32 max_results = 3 [json_name = "maxResults"];

  // Page token, returned by a previous call, to request the next page of
  // results
  optional string page_token = 4 [json_name = "pageToken"];

  // Required. Project ID of the routines to list
  string project_id = 5
      [(google.api.field_behavior) = REQUIRED, json_name = "projectId"];

  // If set, then only the Routine fields in the field mask, as well as
  // project_id, dataset_id and routine_id, are returned in the response. If
  // unset, then the following Routine fields are returned: etag, project_id,
  // dataset_id, routine_id, routine_type, creation_time, last_modified_time,
  // and language.
  optional string read_mask = 6 [json_name = "readMask"];
}

// Request message for UpdateRoutine.
message UpdateRoutineRequest {
  // Required. Dataset ID of the routine to update
  string dataset_id = 1
      [(google.api.field_behavior) = REQUIRED, json_name = "datasetId"];

  // Required. Project ID of the routine to update
  string project_id = 2
      [(google.api.field_behavior) = REQUIRED, json_name = "projectId"];

  // Required. Routine ID of the routine to update
  string routine_id = 3
      [(google.api.field_behavior) = REQUIRED, json_name = "routineId"];

  // The Routine for this request.
  optional google.cloud.cpp.bigquery.v2.Routine routine_resource = 4
      [json_name = "__json_request_body"];
}
