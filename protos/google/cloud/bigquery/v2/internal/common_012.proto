// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/bigquery_public_google_rest_v2.json
// revision: 20240124

syntax = "proto3";

package google.cloud.cpp.bigquery.v2;

import "google/cloud/bigquery/v2/internal/common_010.proto";
import "google/cloud/bigquery/v2/internal/common_018.proto";

// Represents a single JSON object.
message JsonObject {
  // Represents a single JSON object.
  map<string, JsonValue> json_object = 1 [json_name = "JsonObject"];
}

message JsonValue {}

// Request for sending a single streaming insert.
message TableDataInsertAllRequest {
  // Optional. Accept rows that contain values that do not match the schema. The
  // unknown values are ignored. Default is false, which treats unknown values
  // as errors.
  optional bool ignore_unknown_values = 1 [json_name = "ignoreUnknownValues"];

  // Optional. The resource type of the response. The value is not checked at
  // the backend. Historically, it has been set to
  // "bigquery#tableDataInsertAllRequest" but you are not required to set it.
  optional string kind = 2 [json_name = "kind"];

  message RowsItem {
    // Insertion ID for best-effort deduplication. This feature is not
    // recommended, and users seeking stronger insertion semantics are
    // encouraged to use other mechanisms such as the BigQuery Write API.
    optional string insert_id = 1 [json_name = "insertId"];

    // Data for a single row.
    optional JsonObject json = 2 [json_name = "json"];
  }

  repeated RowsItem rows = 3 [json_name = "rows"];

  // Optional. Insert all valid rows of a request, even if invalid rows exist.
  // The default value is false, which causes the entire request to fail if any
  // invalid rows exist.
  optional bool skip_invalid_rows = 4 [json_name = "skipInvalidRows"];

  // Optional. If specified, treats the destination table as a base template,
  // and inserts the rows into an instance table named
  // "{destination}{templateSuffix}". BigQuery will manage creation of the
  // instance table, using the schema of the base template table. See
  // https://cloud.google.com/bigquery/streaming-data-into-bigquery#template-tables
  // for considerations when working with templates tables.
  optional string template_suffix = 5 [json_name = "templateSuffix"];

  // Optional. Unique request trace id. Used for debugging purposes only. It is
  // case-sensitive, limited to up to 36 ASCII characters. A UUID is
  // recommended.
  optional string trace_id = 6 [json_name = "traceId"];
}

// Describes the format of a streaming insert response.
message TableDataInsertAllResponse {
  message InsertErrorsItem {
    // Error information for the row indicated by the index property.
    repeated ErrorProto errors = 1 [json_name = "errors"];

    // The index of the row that error applies to.
    optional uint32 index = 2 [json_name = "index"];
  }

  // Describes specific errors encountered while processing the request.
  repeated InsertErrorsItem insert_errors = 1 [json_name = "insertErrors"];

  // Returns "bigquery#tableDataInsertAllResponse".
  optional string kind = 2 [json_name = "kind"];
}

message TableDataList {
  // A hash of this page of results.
  optional string etag = 1 [json_name = "etag"];

  // The resource type of the response.
  optional string kind = 2 [json_name = "kind"];

  // A token used for paging results. Providing this token instead of the
  // startIndex parameter can help you retrieve stable results when an
  // underlying table is changing.
  optional string page_token = 3 [json_name = "pageToken"];

  // Rows of results.
  repeated TableRow rows = 4 [json_name = "rows"];

  // Total rows of the entire table. In order to show default value 0 we have to
  // present it as string.
  optional string total_rows = 5 [json_name = "totalRows"];
}
