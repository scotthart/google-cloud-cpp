// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/bigquery_public_google_rest_v2.json
// revision: 20240124

syntax = "proto3";

package google.cloud.cpp.bigquery.v2;

import "google/cloud/bigquery/v2/internal/common_008.proto";
import "google/cloud/bigquery/v2/internal/common_009.proto";
import "google/cloud/bigquery/v2/internal/common_015.proto";

message Dataset {
  message AccessItem {
    // [Pick one] A grant authorizing all resources of a particular type in a
    // particular dataset access to this dataset. Only views are supported for
    // now. The role field is not required when this field is set. If that
    // dataset is deleted and re-created, its access needs to be granted again
    // via an update operation.
    optional DatasetAccessEntry dataset = 1 [json_name = "dataset"];

    // [Pick one] A domain to grant access to. Any users signed in with the
    // domain specified will be granted the specified access. Example:
    // "example.com". Maps to IAM policy member "domain:DOMAIN".
    optional string domain = 2 [json_name = "domain"];

    // [Pick one] An email address of a Google Group to grant access to. Maps to
    // IAM policy member "group:GROUP".
    optional string group_by_email = 3 [json_name = "groupByEmail"];

    // [Pick one] Some other type of member that appears in the IAM Policy but
    // isn't a user, group, domain, or special group.
    optional string iam_member = 4 [json_name = "iamMember"];

    // An IAM role ID that should be granted to the user, group, or domain
    // specified in this access entry. The following legacy mappings will be
    // applied: OWNER <=> roles/bigquery.dataOwner WRITER <=>
    // roles/bigquery.dataEditor READER <=> roles/bigquery.dataViewer This field
    // will accept any of the above formats, but will return only the legacy
    // format. For example, if you set this field to "roles/bigquery.dataOwner",
    // it will be returned back as "OWNER".
    optional string role = 5 [json_name = "role"];

    // [Pick one] A routine from a different dataset to grant access to. Queries
    // executed against that routine will have read access to
    // views/tables/routines in this dataset. Only UDF is supported for now. The
    // role field is not required when this field is set. If that routine is
    // updated by any user, access to the routine needs to be granted again via
    // an update operation.
    optional RoutineReference routine = 6 [json_name = "routine"];

    // [Pick one] A special group to grant access to. Possible values include:
    // projectOwners: Owners of the enclosing project. projectReaders: Readers
    // of the enclosing project. projectWriters: Writers of the enclosing
    // project. allAuthenticatedUsers: All authenticated BigQuery users. Maps to
    // similarly-named IAM members.
    optional string special_group = 7 [json_name = "specialGroup"];

    // [Pick one] An email address of a user to grant access to. For example:
    // fred@example.com. Maps to IAM policy member "user:EMAIL" or
    // "serviceAccount:EMAIL".
    optional string user_by_email = 8 [json_name = "userByEmail"];

    // [Pick one] A view from a different dataset to grant access to. Queries
    // executed against that view will have read access to views/tables/routines
    // in this dataset. The role field is not required when this field is set.
    // If that view is updated by any user, access to the view needs to be
    // granted again via an update operation.
    optional TableReference view = 9 [json_name = "view"];
  }

  // Optional. An array of objects that define dataset access for one or more
  // entities. You can set this property when inserting or updating a dataset in
  // order to control who is allowed to access the data. If unspecified at
  // dataset creation time, BigQuery adds default dataset access for the
  // following entities: access.specialGroup: projectReaders; access.role:
  // READER; access.specialGroup: projectWriters; access.role: WRITER;
  // access.specialGroup: projectOwners; access.role: OWNER; access.userByEmail:
  // [dataset creator email]; access.role: OWNER;
  repeated AccessItem access = 1 [json_name = "access"];

  // Output only. The time when this dataset was created, in milliseconds since
  // the epoch.
  optional string creation_time = 2 [json_name = "creationTime"];

  // Required. A reference that identifies the dataset.
  optional DatasetReference dataset_reference = 3
      [json_name = "datasetReference"];

  // Optional. Defines the default collation specification of future tables
  // created in the dataset. If a table is created in this dataset without
  // table-level default collation, then the table inherits the dataset default
  // collation, which is applied to the string fields that do not have explicit
  // collation specified. A change to this field affects only tables created
  // afterwards, and does not alter the existing tables. The following values
  // are supported: * 'und:ci': undetermined locale, case insensitive. * '':
  // empty string. Default to case-sensitive behavior.
  optional string default_collation = 4 [json_name = "defaultCollation"];

  // The default encryption key for all tables in the dataset. Once this
  // property is set, all newly-created partitioned tables in the dataset will
  // have encryption key set to this value, unless table creation request (or
  // query) overrides the key.
  optional EncryptionConfiguration default_encryption_configuration = 5
      [json_name = "defaultEncryptionConfiguration"];

  // This default partition expiration, expressed in milliseconds. When new
  // time-partitioned tables are created in a dataset where this property is
  // set, the table will inherit this value, propagated as the
  // `TimePartitioning.expirationMs` property on the new table. If you set
  // `TimePartitioning.expirationMs` explicitly when creating a table, the
  // `defaultPartitionExpirationMs` of the containing dataset is ignored. When
  // creating a partitioned table, if `defaultPartitionExpirationMs` is set, the
  // `defaultTableExpirationMs` value is ignored and the table will not be
  // inherit a table expiration deadline.
  optional string default_partition_expiration_ms = 6
      [json_name = "defaultPartitionExpirationMs"];

  // Optional. Defines the default rounding mode specification of new tables
  // created within this dataset. During table creation, if this field is
  // specified, the table within this dataset will inherit the default rounding
  // mode of the dataset. Setting the default rounding mode on a table overrides
  // this option. Existing tables in the dataset are unaffected. If columns are
  // defined during that table creation, they will immediately inherit the
  // table's default rounding mode, unless otherwise specified.
  // ROUNDING_MODE_UNSPECIFIED: Unspecified will default to using
  // ROUND_HALF_AWAY_FROM_ZERO.
  // ROUND_HALF_AWAY_FROM_ZERO: ROUND_HALF_AWAY_FROM_ZERO rounds half values
  // away from zero when applying precision and scale upon writing of NUMERIC
  // and BIGNUMERIC values. For Scale: 0 1.1, 1.2, 1.3, 1.4 => 1 1.5, 1.6, 1.7,
  // 1.8, 1.9 => 2
  // ROUND_HALF_EVEN: ROUND_HALF_EVEN rounds half values to the nearest even
  // value when applying precision and scale upon writing of NUMERIC and
  // BIGNUMERIC values. For Scale: 0 1.1, 1.2, 1.3, 1.4 => 1 1.5 => 2 1.6, 1.7,
  // 1.8, 1.9 => 2 2.5 => 2
  optional string default_rounding_mode = 7 [json_name = "defaultRoundingMode"];

  // Optional. The default lifetime of all tables in the dataset, in
  // milliseconds. The minimum lifetime value is 3600000 milliseconds (one
  // hour). To clear an existing default expiration with a PATCH request, set to
  // 0. Once this property is set, all newly-created tables in the dataset will
  // have an expirationTime property set to the creation time plus the value in
  // this property, and changing the value will only affect new tables, not
  // existing ones. When the expirationTime for a given table is reached, that
  // table will be deleted automatically. If a table's expirationTime is
  // modified or removed before the table expires, or if you provide an explicit
  // expirationTime when creating a table, that value takes precedence over the
  // default expiration time indicated by this property.
  optional string default_table_expiration_ms = 8
      [json_name = "defaultTableExpirationMs"];

  // Optional. A user-friendly description of the dataset.
  optional string description = 9 [json_name = "description"];

  // Output only. A hash of the resource.
  optional string etag = 10 [json_name = "etag"];

  // Optional. Information about the external metadata storage where the dataset
  // is defined. Filled out when the dataset type is EXTERNAL.
  optional ExternalDatasetReference external_dataset_reference = 11
      [json_name = "externalDatasetReference"];

  // Optional. A descriptive name for the dataset.
  optional string friendly_name = 12 [json_name = "friendlyName"];

  // Output only. The fully-qualified unique name of the dataset in the format
  // projectId:datasetId. The dataset name without the project name is given in
  // the datasetId field. When creating a new dataset, leave this field blank,
  // and instead specify the datasetId field.
  optional string id = 13 [json_name = "id"];

  // Optional. TRUE if the dataset and its table names are case-insensitive,
  // otherwise FALSE. By default, this is FALSE, which means the dataset and its
  // table names are case-sensitive. This field does not affect routine
  // references.
  optional bool is_case_insensitive = 14 [json_name = "isCaseInsensitive"];

  // Output only. The resource type.
  optional string kind = 15 [json_name = "kind"];

  // The labels associated with this dataset. You can use these to organize and
  // group your datasets. You can set this property when inserting or updating a
  // dataset. See Creating and Updating Dataset Labels for more information.
  map<string, string> labels = 16 [json_name = "labels"];

  // Output only. The date when this dataset was last modified, in milliseconds
  // since the epoch.
  optional string last_modified_time = 17 [json_name = "lastModifiedTime"];

  // Optional. The source dataset reference when the dataset is of type LINKED.
  // For all other dataset types it is not set. This field cannot be updated
  // once it is set. Any attempt to update this field using Update and Patch API
  // Operations will be ignored.
  optional LinkedDatasetSource linked_dataset_source = 18
      [json_name = "linkedDatasetSource"];

  // The geographic location where the dataset should reside. See
  // https://cloud.google.com/bigquery/docs/locations for supported locations.
  optional string location = 19 [json_name = "location"];

  // Optional. Defines the time travel window in hours. The value can be from 48
  // to 168 hours (2 to 7 days). The default value is 168 hours if this is not
  // set.
  optional string max_time_travel_hours = 20 [json_name = "maxTimeTravelHours"];

  // Output only. Reserved for future use.
  optional bool satisfies_pzs = 21 [json_name = "satisfiesPzs"];

  // Output only. A URL that can be used to access the resource again. You can
  // use this URL in Get or Update requests to the resource.
  optional string self_link = 22 [json_name = "selfLink"];

  // Optional. Updates storage_billing_model for the dataset.
  // STORAGE_BILLING_MODEL_UNSPECIFIED: Value not set.
  // LOGICAL: Billing for logical bytes.
  // PHYSICAL: Billing for physical bytes.
  optional string storage_billing_model = 23
      [json_name = "storageBillingModel"];

  message TagsItem {
    // Required. The namespaced friendly name of the tag key, e.g.
    // "12345/environment" where 12345 is org id.
    optional string tag_key = 1 [json_name = "tagKey"];

    // Required. The friendly short name of the tag value, e.g. "production".
    optional string tag_value = 2 [json_name = "tagValue"];
  }

  // Output only. Tags for the Dataset.
  repeated TagsItem tags = 24 [json_name = "tags"];

  // Output only. Same as `type` in `ListFormatDataset`. The type of the
  // dataset, one of: * DEFAULT - only accessible by owner and authorized
  // accounts, * PUBLIC - accessible by everyone, * LINKED - linked dataset, *
  // EXTERNAL - dataset with definition in external metadata catalog. --
  // *BIGLAKE_METASTORE - dataset that references a database created in
  // BigLakeMetastore service. --
  optional string type = 25 [json_name = "type"];
}

// Grants all resources of particular types in a particular dataset read access
// to the current dataset. Similar to how individually authorized views work,
// updates to any resource granted through its dataset (including creation of
// new resources) requires read permission to referenced resources, plus write
// permission to the authorizing dataset.
message DatasetAccessEntry {
  // The dataset this entry applies to
  optional DatasetReference dataset = 1 [json_name = "dataset"];

  // Which resources in the dataset this entry applies to. Currently, only views
  // are supported, but additional target types may be added in the future.
  repeated string target_types = 2 [json_name = "targetTypes"];
}

// Response format for a page of results when listing datasets.
message DatasetList {
  message DatasetsItem {
    // The dataset reference. Use this property to access specific parts of the
    // dataset's ID, such as project ID or dataset ID.
    optional DatasetReference dataset_reference = 1
        [json_name = "datasetReference"];

    // An alternate name for the dataset. The friendly name is purely decorative
    // in nature.
    optional string friendly_name = 2 [json_name = "friendlyName"];

    // The fully-qualified, unique, opaque ID of the dataset.
    optional string id = 3 [json_name = "id"];

    // The resource type. This property always returns the value
    // "bigquery#dataset"
    optional string kind = 4 [json_name = "kind"];

    // The labels associated with this dataset. You can use these to organize
    // and group your datasets.
    map<string, string> labels = 5 [json_name = "labels"];

    // The geographic location where the dataset resides.
    optional string location = 6 [json_name = "location"];
  }

  // An array of the dataset resources in the project. Each resource contains
  // basic information. For full information about a particular dataset
  // resource, use the Datasets: get method. This property is omitted when there
  // are no datasets in the project.
  repeated DatasetsItem datasets = 1 [json_name = "datasets"];

  // Output only. A hash value of the results page. You can use this property to
  // determine if the page has changed since the last request.
  optional string etag = 2 [json_name = "etag"];

  // Output only. The resource type. This property always returns the value
  // "bigquery#datasetList"
  optional string kind = 3 [json_name = "kind"];

  // A token that can be used to request the next results page. This property is
  // omitted on the final results page.
  optional string next_page_token = 4 [json_name = "nextPageToken"];

  // A list of skipped locations that were unreachable. For more information
  // about BigQuery locations, see:
  // https://cloud.google.com/bigquery/docs/locations. Example: "europe-west5"
  repeated string unreachable = 5 [json_name = "unreachable"];
}

// Configures the access a dataset defined in an external metadata storage.
message ExternalDatasetReference {
  // Required. The connection id that is used to access the external_source.
  // Format:
  // projects/{project_id}/locations/{location_id}/connections/{connection_id}
  optional string connection = 1 [json_name = "connection"];

  // Required. External source that backs this dataset.
  optional string external_source = 2 [json_name = "externalSource"];
}

// A dataset source type which refers to another BigQuery dataset.
message LinkedDatasetSource {
  // The source dataset reference contains project numbers and not project ids.
  optional DatasetReference source_dataset = 1 [json_name = "sourceDataset"];
}

// Request format for undeleting a dataset.
message UndeleteDatasetRequest {
  // Optional. The exact time when the dataset was deleted. If not specified, it
  // will undelete the most recently deleted version.
  optional string deletion_time = 1 [json_name = "deletionTime"];
}
