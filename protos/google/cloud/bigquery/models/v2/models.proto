// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the C++ microgenerator.
// If you make any local changes, they will be lost.
// file:///workspace/generator/discovery/bigquery_public_google_rest_v2.json
// revision: 20240124

syntax = "proto3";

package google.cloud.cpp.bigquery.models.v2;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/cloud/bigquery/v2/internal/common_006.proto";
import "google/protobuf/empty.proto";

// Service for the models resource.
// https://cloud.google.com/bigquery/docs/reference/rest/v2/models
service Models {
  option (google.api.default_host) = "bigquery.googleapis.com";
  option (google.api.oauth_scopes) =
      "https://www.googleapis.com/auth/bigquery,"
      "https://www.googleapis.com/auth/cloud-platform,"
      "https://www.googleapis.com/auth/cloud-platform.read-only";

  // Deletes the model specified by modelId from the dataset.
  // https://cloud.google.com/bigquery/docs/reference/rest/v2/models/delete
  rpc DeleteModel(DeleteModelRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/bigquery/v2/projects/{project_id}/datasets/{dataset_id}/models/{model_id}"
    };
    option (google.api.method_signature) = "project_id,dataset_id,model_id";
  }

  // Gets the specified model resource by model ID.
  // https://cloud.google.com/bigquery/docs/reference/rest/v2/models/get
  rpc GetModel(GetModelRequest) returns (google.cloud.cpp.bigquery.v2.Model) {
    option (google.api.http) = {
      get: "/bigquery/v2/projects/{project_id}/datasets/{dataset_id}/models/{model_id}"
    };
    option (google.api.method_signature) = "project_id,dataset_id,model_id";
  }

  // Lists all models in the specified dataset. Requires the READER dataset
  // role. After retrieving the list of models, you can get information about a
  // particular model by calling the models.get method.
  // https://cloud.google.com/bigquery/docs/reference/rest/v2/models/list
  rpc ListModels(ListModelsRequest)
      returns (google.cloud.cpp.bigquery.v2.ListModelsResponse) {
    option (google.api.http) = {
      get: "/bigquery/v2/projects/{project_id}/datasets/{dataset_id}/models"
    };
    option (google.api.method_signature) = "project_id,dataset_id";
  }

  // Patch specific fields in the specified model.
  // https://cloud.google.com/bigquery/docs/reference/rest/v2/models/patch
  rpc PatchModel(PatchModelRequest)
      returns (google.cloud.cpp.bigquery.v2.Model) {
    option (google.api.http) = {
      patch: "/bigquery/v2/projects/{project_id}/datasets/{dataset_id}/models/{model_id}"
      body: "model_resource"
    };
    option (google.api.method_signature) =
        "project_id,dataset_id,model_id,model_resource";
  }
}

// Request message for DeleteModel.
message DeleteModelRequest {
  // Required. Dataset ID of the model to delete.
  string dataset_id = 1
      [(google.api.field_behavior) = REQUIRED, json_name = "datasetId"];

  // Required. Model ID of the model to delete.
  string model_id = 2
      [(google.api.field_behavior) = REQUIRED, json_name = "modelId"];

  // Required. Project ID of the model to delete.
  string project_id = 3
      [(google.api.field_behavior) = REQUIRED, json_name = "projectId"];
}

// Request message for GetModel.
message GetModelRequest {
  // Required. Dataset ID of the requested model.
  string dataset_id = 1
      [(google.api.field_behavior) = REQUIRED, json_name = "datasetId"];

  // Required. Model ID of the requested model.
  string model_id = 2
      [(google.api.field_behavior) = REQUIRED, json_name = "modelId"];

  // Required. Project ID of the requested model.
  string project_id = 3
      [(google.api.field_behavior) = REQUIRED, json_name = "projectId"];
}

// Request message for ListModels.
message ListModelsRequest {
  // Required. Dataset ID of the models to list.
  string dataset_id = 1
      [(google.api.field_behavior) = REQUIRED, json_name = "datasetId"];

  // The maximum number of results to return in a single response page. Leverage
  // the page tokens to iterate through the entire collection.
  optional uint32 max_results = 2 [json_name = "maxResults"];

  // Page token, returned by a previous call to request the next page of results
  optional string page_token = 3 [json_name = "pageToken"];

  // Required. Project ID of the models to list.
  string project_id = 4
      [(google.api.field_behavior) = REQUIRED, json_name = "projectId"];
}

// Request message for PatchModel.
message PatchModelRequest {
  // Required. Dataset ID of the model to patch.
  string dataset_id = 1
      [(google.api.field_behavior) = REQUIRED, json_name = "datasetId"];

  // Required. Model ID of the model to patch.
  string model_id = 2
      [(google.api.field_behavior) = REQUIRED, json_name = "modelId"];

  // The Model for this request.
  optional google.cloud.cpp.bigquery.v2.Model model_resource = 3
      [json_name = "__json_request_body"];

  // Required. Project ID of the model to patch.
  string project_id = 4
      [(google.api.field_behavior) = REQUIRED, json_name = "projectId"];
}
